rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read products and related data
    match /products/{document} {
      allow read: if request.auth != null;
      allow write: if false; // Products are written by server only
    }
    
    // Allow authenticated users to read stock history
    match /stock_history/{document} {
      allow read: if request.auth != null;
      allow write: if false; // Stock history is written by server only
    }
    
    // Allow authenticated users to read price history
    match /price_history/{document} {
      allow read: if request.auth != null;
      allow write: if false; // Price history is written by server only
    }
    
    // Allow authenticated users to read crawl requests for activity monitoring
    match /crawl_requests/{document} {
      allow read: if request.auth != null;
      allow write: if false; // Crawl requests are managed by server only
    }
    
    // Allow authenticated users to manage their own favorites
    match /user_favorites/{document} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
    }
    
    // Allow authenticated users to submit website suggestions
    match /website_suggestions/{document} {
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }

    // Allow authenticated users to persist per-user settings (e.g. trial state)
    // Users may only read/write their own document under user_settings/{uid}
    match /user_settings/{userId} {
      // Read allowed only for the authenticated owner
      allow get, list: if request.auth != null && request.auth.uid == userId;

      // Create only allowed when the document's userId matches the requester
      allow create: if request.auth != null
        && request.auth.uid == userId
        && request.resource.data.userId == request.auth.uid;

      // Updates and deletes allowed only for the owner
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}